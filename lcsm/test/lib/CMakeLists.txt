PROJECT(LCSMTesting LANGUAGES CXX VERSION 1.0.0)

ADD_LIBRARY(LCSMTesting)

SET(LCSMTesting_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Asserts.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Test.cpp
)

SET(LCSMTesting_HEADERS
    ${CMAKE_CURRENT_SOURCE_DIR}/include/lcsm/Testing/Asserts.h
    ${CMAKE_CURRENT_SOURCE_DIR}/include/lcsm/Testing/Test.h
)

SOURCE_GROUP("Header files/lcsm/Testing" FILES ${LCSMTesting_HEADERS})

TARGET_INCLUDE_DIRECTORIES(LCSMTesting
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
)

TARGET_SOURCES(LCSMTesting
    PRIVATE
        ${LCSMTesting_SOURCES}
        ${LCSMTesting_HEADERS}
)

TARGET_LINK_LIBRARIES(LCSMTesting PRIVATE LCSM)

IF(BUILD_USE_SANITIZER)
    IF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        TARGET_COMPILE_OPTIONS(LCSM PUBLIC /fsanitize=address)
        TARGET_COMPILE_DEFINITIONS(LCSM PUBLIC _DISABLE_STRING_ANNOTATION=1 _DISABLE_VECTOR_ANNOTATION=1)
    ELSE()
        TARGET_COMPILE_OPTIONS(LCSM PUBLIC -fsanitize=undefined,address)
        TARGET_LINK_OPTIONS(LCSM PUBLIC -fsanitize=undefined,address)
        TARGET_COMPILE_OPTIONS(LCSM PUBLIC -fno-sanitize-recover=all -fno-optimize-sibling-calls -fno-omit-frame-pointer)
    ENDIF()
ENDIF()

IF(MSVC)
    TARGET_COMPILE_OPTIONS(LCSM PRIVATE /W4)
    IF(BUILD_ENABLE_WERROR)
        TARGET_COMPILE_OPTIONS(LCSM PRIVATE /WX)
    ENDIF()
ELSE()
    TARGET_COMPILE_OPTIONS(LCSM PRIVATE -Wall -Wextra -Wpedantic)
    IF(BUILD_ENABLE_WERROR)
        TARGET_COMPILE_OPTIONS(LCSM PRIVATE -Werror)
    ENDIF()
ENDIF()

SET(LCSMTesting_PUBLIC_HEADERS "${LCSMTesting_HEADERS}")
SET_TARGET_PROPERTIES(LCSMTesting PROPERTIES PUBLIC_HEADER "${LCSMTesting_PUBLIC_HEADERS}")
