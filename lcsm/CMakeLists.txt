ADD_LIBRARY(LCSM)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src                  LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/Model            LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/Model/std        LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/Physical         LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/Physical/std     LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/Verilog          LCSM_SOURCES)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include              LCSM_HEADERS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include/Model        LCSM_HEADERS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include/Model/std    LCSM_HEADERS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include/Physical     LCSM_HEADERS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include/Physical/std LCSM_HEADERS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/include/Verilog      LCSM_HEADERS)

TARGET_INCLUDE_DIRECTORIES(LCSM PUBLIC include)
TARGET_SOURCES(LCSM PRIVATE ${LCSM_SOURCES} ${LCSM_HEADERS})

IF(BUILD_USE_SANITIZER)

ENDIF()

IF(MSVC)
    TARGET_COMPILE_OPTIONS(LCSM PRIVATE /W4)
ELSE()
    TARGET_COMPILE_OPTIONS(LCSM PRIVATE -Wall -Wextra -Wpedantic)
ENDIF()

ADD_SUBDIRECTORY(test)
